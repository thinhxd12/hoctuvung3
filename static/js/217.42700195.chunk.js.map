{"version":3,"file":"static/js/217.42700195.chunk.js","mappings":"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","sources":["pages/Layout/Layout.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\r\nimport './Layout.scss'\r\nimport { Outlet } from 'react-router-dom'\r\nimport {\r\n    useLazyGetCorsLinkQuery\r\n} from '../../services/auth/authService';\r\nimport { DEFAULT_CORS_PROXY, URL_IMAGE_MAIN_PAGE } from '../../interfaces/interface';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/store';\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\nconst Layout = ({ }: Props) => {\r\n    const { toggleLayout } = useSelector((state: RootState) => state.vocabulary);\r\n    const [urlImgArr, setUrlImgArr] = useState<(string | null)[]>([]);\r\n    const [imgSrc, setImgSrc] = useState<string | null>('');\r\n    const [currentSlideNumber, setCurrentSlideNumber] = useState<number>(0);\r\n    const [description, setDescription] = useState({\r\n        date: '',\r\n        title: '',\r\n        attr: '',\r\n        authorImg: '',\r\n        authorName: '',\r\n        authorYear: '',\r\n        content: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchImgLinkArr();\r\n    }, [toggleLayout])\r\n\r\n    useEffect(() => {\r\n        if (urlImgArr.length > 0) fetchRenderImgBackground(0);\r\n    }, [urlImgArr])\r\n\r\n    const [getCorsLink] = useLazyGetCorsLinkQuery();\r\n\r\n    const fetchImgLinkArr = async () => {\r\n        const imgURL = DEFAULT_CORS_PROXY + URL_IMAGE_MAIN_PAGE;\r\n        const mainPageImgHtml = await getCorsLink(imgURL).unwrap();\r\n        let res: (string | null)[] = [];\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(mainPageImgHtml, 'text/html');\r\n        doc.querySelectorAll('.also__item').forEach((item) => {\r\n            res.push(item.children[0].getAttribute(\"href\"))\r\n        });\r\n        setUrlImgArr(res);\r\n    };\r\n\r\n    const showImageLeft = () => {\r\n        let currentSlide = (currentSlideNumber - 1 + urlImgArr.length) % urlImgArr.length;\r\n        setCurrentSlideNumber(currentSlide);\r\n        fetchRenderImgBackground(currentSlide);\r\n    }\r\n\r\n    const showImageRight = () => {\r\n        let currentSlide = (currentSlideNumber + 1) % urlImgArr.length;\r\n        setCurrentSlideNumber(currentSlide);\r\n        fetchRenderImgBackground(currentSlide);\r\n    }\r\n\r\n    const fetchRenderImgBackground = async (numb: number) => {\r\n        const imgURL = DEFAULT_CORS_PROXY + urlImgArr[numb];\r\n        const pageImgHtml = await getCorsLink(imgURL).unwrap();\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(pageImgHtml, 'text/html');\r\n        const imgSrcGet = doc.querySelector(\".main-image\")?.children[0].getAttribute(\"srcset\") as string;\r\n        imgSrcGet && setImgSrc(imgSrcGet);\r\n        const imgDateGet = doc.querySelector(\".main-description__share-date\")?.textContent;\r\n        const imgTitleGet = doc.querySelector(\".main-description__title\")?.textContent;\r\n        const imgAttGet = doc.querySelector(\".main-description__attr\")?.textContent;\r\n        const imgAuthorImg = doc.querySelector(\".main-description__authors\")?.querySelector('img')?.getAttribute('srcset');\r\n        const imgAuthorName = doc.querySelector(\".main-description__author\")?.textContent;\r\n        const imgAuthorYear = doc.querySelector(\".main-description__author-years\")?.textContent;\r\n        const imgTextGet = doc.querySelector(\".main-description__text-content\")?.textContent;\r\n        setDescription({\r\n            date: imgDateGet || '',\r\n            title: imgTitleGet || '',\r\n            attr: imgAttGet || '',\r\n            authorImg: imgAuthorImg || '',\r\n            authorName: imgAuthorName || '',\r\n            authorYear: imgAuthorYear || '',\r\n            content: imgTextGet || '',\r\n        })\r\n    }\r\n\r\n    // -------------------RESPONSIVE START-------------------- //\r\n\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setWindowWidth(window.innerWidth);\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    // -------------------RESPONSIVE END-------------------- //\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {windowWidth > 768 ? (<div className='layoutContainer'>\r\n                <div className='mainImageContent'>\r\n                    {imgSrc ? <>\r\n                        <img className='mainImage' srcSet={imgSrc || ''} />\r\n                        <img className='mainImageBlurred' srcSet={imgSrc || ''} />\r\n                    </> : <div className='mainImageBackground'></div>\r\n                    }\r\n                    <button className='imageRoundBtn imageRoundBtnLeft' onClick={() => showImageLeft()}>\r\n                        <i className='bx bx-chevron-left'></i>\r\n                    </button>\r\n                    <button className='imageRoundBtn imageRoundBtnRight' onClick={() => showImageRight()}>\r\n                        <i className='bx bx-chevron-right'></i>\r\n                    </button>\r\n                </div>\r\n                <div className='mainOutlet'>\r\n                    <Outlet />\r\n                </div>\r\n                <div className='mainImageDescriptionContainter'>\r\n                    <div className='mainImageDescriptionContent'>\r\n                        <div className='main-description__share-date'>{description.date}</div>\r\n                        <h1 className='main-description__title'>{description.title}</h1>\r\n                        <div className='main-description__attr'>{description.attr}</div>\r\n                        <div className='main-description__authors'>\r\n                            <div className='main-description__author'>\r\n                                <img srcSet={description.authorImg} alt='...' />\r\n                                <span>{description.authorName}</span>\r\n                            </div>\r\n                            <div className='main-description__author-years'>{description.authorYear}</div>\r\n                        </div>\r\n                        <div className='main-description__text-content'>{description.content}</div>\r\n                    </div>\r\n                    <div className='mainImageDescriptionFooter'></div>\r\n                </div>\r\n            </div>\r\n            ) : <div className='mainImageContent'>\r\n                <div className='subOutletLeft'></div>\r\n                <div className='mainOutlet'>\r\n                    <Outlet />\r\n                </div>\r\n                <div className='subOutletRight'></div>\r\n            </div>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout"],"names":["_ref","toggleLayout","useSelector","state","vocabulary","urlImgArr","setUrlImgArr","useState","imgSrc","setImgSrc","currentSlideNumber","setCurrentSlideNumber","description","setDescription","date","title","attr","authorImg","authorName","authorYear","content","useEffect","fetchImgLinkArr","length","fetchRenderImgBackground","getCorsLink","useLazyGetCorsLinkQuery","async","imgURL","DEFAULT_CORS_PROXY","URL_IMAGE_MAIN_PAGE","mainPageImgHtml","unwrap","res","DOMParser","parseFromString","querySelectorAll","forEach","item","push","children","getAttribute","_doc$querySelector","_doc$querySelector2","_doc$querySelector3","_doc$querySelector4","_doc$querySelector5","_doc$querySelector5$q","_doc$querySelector6","_doc$querySelector7","_doc$querySelector8","numb","pageImgHtml","doc","imgSrcGet","querySelector","imgDateGet","textContent","imgTitleGet","imgAttGet","imgAuthorImg","imgAuthorName","imgAuthorYear","imgTextGet","windowWidth","setWindowWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","_jsx","_Fragment","_jsxs","className","srcSet","onClick","showImageLeft","currentSlide","showImageRight","Outlet","alt"],"sourceRoot":""}